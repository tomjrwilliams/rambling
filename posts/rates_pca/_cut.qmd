
```{python}
#| code-fold: false
#| code-summary: "Returns"
dfs_curves = xf.bt.data.curve_dfs(
    curves=xt.iTuple([
        "YCSW0023",
        "YCGT0025",
        "YCSW0045",
        "YCGT0016",
    ]).extend(
        xf.bt.data.curves.CORP_USD
    ).extend(
        xf.bt.data.curves.CORP_EUR
    ),
    dp="../xfactors/__local__/csvs"
)
dfs_curves = {
    curve: xf.utils.dfs.apply_na_threshold(
        df, na_threshold=(0., 0.,), na_padding=(0.2, 0.4,)
    )
    for curve, df in dfs_curves.items()
}
```



As one can see, yields per tenor are pretty highly correlated across a given curve.

As the weight matrix is orthonormal, it's (approximate) inverse is simply given by it's transpose (see the post [here](../orthogonal) for more detail).

As such, we can map our yield curve don to our factors by matrix multiplication with our weights, and then back up from ou

